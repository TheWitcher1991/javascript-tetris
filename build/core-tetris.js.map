{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/game.js","webpack:///./src/js/view.js","webpack:///./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Game","this","score","lines","points","playfield","createPlayfield","activePiece","createPiece","nextPiece","pX","x","pY","y","blocks","length","level","piece","Math","floor","random","Error","hasCollision","lockPiece","clearedLines","clearLines","updateScore","updatePiece","rotateBlocks","clockwise","j","temp","undefined","rows","numberOfBlocks","unshift","index","splice","Array","fill","extend","to","from","pro","View","element","width","height","colums","colors","canvas","document","createElement","ctx","getContext","playfieldBorderWidth","playfieldX","playfieldY","playfieldWidth","playfieldHeight","playfieldInnerWidth","playfieldInnerHeight","blockWidth","blockHeight","panelX","panelY","panelWidth","panelHeight","appendChild","state","clearScreen","renderPlayfield","renderPanel","fillStyle","font","textAlign","textBaseline","fillText","fillRect","clearRect","line","block","renderBlock","strokeStyle","lineWidth","strokeRect","color","root","querySelector","game","view","window","addEventListener","event","keyCode","movePieceLeft","renderMainScreen","getState","rotatePiece","movePieceRight","movePieceDown","console","log"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,qbC7EhCC,E,WAEjB,c,4FAAc,SAEVC,KAAKC,MAAQ,EACbD,KAAKE,MAAQ,GAEbF,KAAKG,OAAS,CACV,EAAK,GACL,EAAK,IACL,EAAK,IACL,EAAK,MAGTH,KAAKI,UAAYJ,KAAKK,kBAEtBL,KAAKM,YAAcN,KAAKO,cACxBP,KAAKQ,UAAYR,KAAKO,c,0DAWtB,IAHA,IAAMH,EAAYJ,KAAKK,kBADhB,EAE0BL,KAAKM,YAA3BG,EAFJ,EAECC,EAAUC,EAFX,EAEQC,EAAOC,EAFf,EAEeA,OAEbD,EAAI,EAAGA,EAAIZ,KAAKI,UAAUU,OAAQF,IAAK,CAC5CR,EAAUQ,GAAK,GAEf,IAAK,IAAIF,EAAI,EAAGA,EAAIV,KAAKI,UAAUQ,GAAGE,OAAQJ,IAC1CN,EAAUQ,GAAGF,GAAKV,KAAKI,UAAUQ,GAAGF,GAI5C,IAAK,IAAIE,EAAI,EAAGA,EAAIC,EAAOC,OAAQF,IAC/B,IAAK,IAAIF,EAAI,EAAGA,EAAIG,EAAOD,GAAGE,OAAQJ,IAC9BG,EAAOD,GAAGF,KACVN,EAAUO,EAAKC,GAAGH,EAAKC,GAAKG,EAAOD,GAAGF,IAKlD,MAAO,CACHT,MAAOD,KAAKC,MACZc,MAAOf,KAAKe,MACZb,MAAOF,KAAKE,MACZM,UAAWR,KAAKQ,UAChBJ,e,wCAOJ,IAFA,IAAMA,EAAY,GAETQ,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzBR,EAAUQ,GAAK,GAEf,IAAK,IAAIF,EAAI,EAAGA,EAAI,GAAIA,IACpBN,EAAUQ,GAAGF,GAAK,EAI1B,OAAON,I,oCAIP,IAEMY,EAAQ,GAEd,OAHa,UADCC,KAAKC,MAAuB,EAAjBD,KAAKE,YAK1B,IAAK,IACDH,EAAMH,OAAS,CACX,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEd,MACJ,IAAK,IACDG,EAAMH,OAAS,CACX,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEX,MACJ,IAAK,IACDG,EAAMH,OAAS,CACX,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEX,MACJ,IAAK,IACDG,EAAMH,OAAS,CACX,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEd,MACJ,IAAK,IACDG,EAAMH,OAAS,CACX,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEX,MACJ,IAAK,IACDG,EAAMH,OAAS,CACX,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEX,MACJ,IAAK,IACDG,EAAMH,OAAS,CACX,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEX,MACJ,QACI,MAAM,IAAIO,MAAM,sBAMxB,OAHAJ,EAAMN,EAAIO,KAAKC,OAAO,GAAKF,EAAMH,OAAO,GAAGC,QAAU,GACrDE,EAAMJ,EAAI,EAEHI,I,sCAIPhB,KAAKM,YAAYI,GAAK,EAElBV,KAAKqB,iBACLrB,KAAKM,YAAYI,GAAK,K,uCAK1BV,KAAKM,YAAYI,GAAK,EAElBV,KAAKqB,iBACLrB,KAAKM,YAAYI,GAAK,K,sCAO1B,GAFAV,KAAKM,YAAYM,GAAK,EAElBZ,KAAKqB,eAAgB,CACrBrB,KAAKM,YAAYM,GAAK,EACtBZ,KAAKsB,YACL,IAAMC,EAAevB,KAAKwB,aAC1BxB,KAAKyB,YAAYF,GACjBvB,KAAK0B,iB,oCAKV1B,KAAK2B,eAEA3B,KAAKqB,gBACLrB,KAAK2B,cAAa,K,qCAUtB,IAN2B,IAAlBC,IAAkB,yDACrBf,EAASb,KAAKM,YAAYO,OAC1BC,EAASD,EAAOC,OAChBJ,EAAIO,KAAKC,MAAMJ,EAAS,GACxBF,EAAIE,EAAS,EAEV/C,EAAI,EAAGA,EAAI2C,EAAG3C,IACnB,IAAK,IAAI8D,EAAI9D,EAAG8D,EAAIjB,EAAI7C,EAAG8D,IAAK,CAC5B,IAAMC,EAAOjB,EAAO9C,GAAG8D,GAEnBD,GACAf,EAAO9C,GAAG8D,GAAKhB,EAAOD,EAAIiB,GAAG9D,GAC7B8C,EAAOD,EAAIiB,GAAG9D,GAAK8C,EAAOD,EAAI7C,GAAG6C,EAAIiB,GACrChB,EAAOD,EAAI7C,GAAG6C,EAAIiB,GAAKhB,EAAOgB,GAAGjB,EAAI7C,GACrC8C,EAAOgB,GAAGjB,EAAI7C,GAAK+D,IAEnBjB,EAAO9C,GAAG8D,GAAKhB,EAAOgB,GAAGjB,EAAI7C,GAC7B8C,EAAOgB,GAAGjB,EAAI7C,GAAK8C,EAAOD,EAAI7C,GAAG6C,EAAIiB,GACrChB,EAAOD,EAAI7C,GAAG6C,EAAIiB,GAAKhB,EAAOD,EAAIiB,GAAG9D,GACrC8C,EAAOD,EAAIiB,GAAG9D,GAAK+D,M,qCAU/B,IAHA,IAAM1B,EAAYJ,KAAKI,UADZ,EAEsBJ,KAAKM,YAA3BG,EAFA,EAEHC,EAAUC,EAFP,EAEIC,EAAOC,EAFX,EAEWA,OAEbD,EAAI,EAAGA,EAAIC,EAAOC,OAAQF,IAC/B,IAAK,IAAIF,EAAI,EAAGA,EAAIG,EAAOD,GAAGE,OAAQJ,IAClC,GACIG,EAAOD,GAAGF,UACcqB,IAAtB3B,EAAUO,EAAKC,SAAkDmB,IAA9B3B,EAAUO,EAAKC,GAAGH,EAAKC,IAC5DN,EAAUO,EAAKC,GAAGH,EAAKC,IAEvB,OAAO,EAKnB,OAAO,I,kCAOP,IAHA,IAAMN,EAAYJ,KAAKI,UADf,EAEyBJ,KAAKM,YAA3BG,EAFH,EAEAC,EAAUC,EAFV,EAEOC,EAAOC,EAFd,EAEcA,OAEbD,EAAI,EAAGA,EAAIC,EAAOC,OAAQF,IAC/B,IAAK,IAAIF,EAAI,EAAGA,EAAIG,EAAOD,GAAGE,OAAQJ,IAC9BG,EAAOD,GAAGF,KACVN,EAAUO,EAAKC,GAAGH,EAAKC,GAAKG,EAAOD,GAAGF,M,mCAWlD,IAJA,IAEIR,EAAQ,GAEHU,EAAIoB,GAAUpB,GAAK,EAAGA,IAAK,CAGhC,IAFA,IAAIqB,EAAiB,EAEZvB,EAAI,EAAGA,EANJ,GAMiBA,IACrBV,KAAKI,UAAUQ,GAAGF,KAClBuB,GAAkB,GAI1B,GAAuB,IAAnBA,EACA,MACOA,EAdC,SAgBDA,GACP/B,EAAMgC,QAAQtB,GAItB,cAAkBV,EAAlB,eAAyB,CAApB,IAAIiC,EAAK,KACVnC,KAAKI,UAAUgC,OAAOD,EAAO,GAC7BnC,KAAKI,UAAU8B,QAAQ,IAAIG,MAvBf,IAuB8BC,KAAK,IAGnD,OAAOpC,EAAMY,S,kCAGLS,GACJA,EAAe,IACfvB,KAAKC,MAAQD,KAAKG,OAAOoB,IAAiBvB,KAAKe,MAAQ,GACvDf,KAAKE,OAASqB,K,oCAKlBvB,KAAKM,YAAcN,KAAKQ,UACxBR,KAAKQ,UAAYR,KAAKO,gB,4BAtPtB,OAAOU,KAAKC,MAAmB,GAAblB,KAAKE,Y,2aA2P/BH,EAAKwC,OAASxC,EAAKJ,UAAU4C,OAAS,SAAUC,EAAIC,GAChD,GAAkB,WAAd,EAAOD,IAAmC,WAAhB,EAAOC,GACjC,IAAK,IAAIC,KAAOD,EACRA,EAAK7C,eAAe8C,KACpBF,EAAGE,GAAOD,EAAKC,K,ICpRVC,E,WAEjB,WAAYC,EAASC,EAAOC,EAAQd,EAAMe,I,4FAAQ,SAC9C/C,KAAK4C,QAAUA,EACf5C,KAAK6C,MAAQA,EACb7C,KAAK8C,OAASA,EACd9C,KAAKgC,KAAOA,EACZhC,KAAK+C,OAASA,EAEd/C,KAAKgD,OAAS,CACV,EAAM,OACN,EAAM,OACN,EAAM,SACN,EAAM,SACN,EAAM,QACN,EAAM,UACN,EAAM,OAGVhD,KAAKiD,OAASC,SAASC,cAAc,UACrCnD,KAAKiD,OAAOJ,MAAQ7C,KAAK6C,MACzB7C,KAAKiD,OAAOH,OAAS9C,KAAK8C,OAC1B9C,KAAKoD,IAAMpD,KAAKiD,OAAOI,WAAW,MAElCrD,KAAKsD,qBAAuB,EAC5BtD,KAAKuD,WAAavD,KAAKsD,qBACvBtD,KAAKwD,WAAaxD,KAAKsD,qBACvBtD,KAAKyD,eAA8B,EAAbzD,KAAK6C,MAAY,EACvC7C,KAAK0D,gBAAkB1D,KAAK8C,OAC5B9C,KAAK2D,oBAAsB3D,KAAKyD,eAA6C,EAA5BzD,KAAKsD,qBACtDtD,KAAK4D,qBAAuB5D,KAAK0D,gBAA8C,EAA5B1D,KAAKsD,qBAExDtD,KAAK6D,WAAa7D,KAAK2D,oBAAsBZ,EAC7C/C,KAAK8D,YAAc9D,KAAK4D,qBAAuB5B,EAE/ChC,KAAK+D,OAAS/D,KAAKyD,eAAiB,GACpCzD,KAAKgE,OAAS,EACdhE,KAAKiE,WAAajE,KAAK6C,MAAQ,EAC/B7C,KAAKkE,YAAclE,KAAK8C,OAExB9C,KAAK4C,QAAQuB,YAAYnE,KAAKiD,Q,gEAGjBmB,GACbpE,KAAKqE,cACLrE,KAAKsE,gBAAgBF,GACrBpE,KAAKuE,YAAYH,K,0CAIjBpE,KAAKoD,IAAIoB,UAAY,QACrBxE,KAAKoD,IAAIqB,KAAO,wBAChBzE,KAAKoD,IAAIsB,UAAY,SACrB1E,KAAKoD,IAAIuB,aAAe,SACxB3E,KAAKoD,IAAIwB,SAAS,uBAAwB5E,KAAK6C,MAAQ,EAAG7C,KAAK8C,OAAS,K,0CAIxE9C,KAAKoD,IAAIoB,UAAY,yBACrBxE,KAAKoD,IAAIyB,SAAS,EAAG,EAAG7E,KAAK6C,MAAO7C,KAAK8C,QAEzC9C,KAAKoD,IAAIoB,UAAY,QACrBxE,KAAKoD,IAAIqB,KAAO,wBAChBzE,KAAKoD,IAAIsB,UAAY,SACrB1E,KAAKoD,IAAIuB,aAAe,SACxB3E,KAAKoD,IAAIwB,SAAS,wBAAyB5E,KAAK6C,MAAQ,EAAG7C,KAAK8C,OAAS,K,yCAGlD,IAAT7C,EAAS,EAATA,MACdD,KAAKqE,cAELrE,KAAKoD,IAAIoB,UAAY,QACrBxE,KAAKoD,IAAIqB,KAAO,wBAChBzE,KAAKoD,IAAIsB,UAAY,SACrB1E,KAAKoD,IAAIuB,aAAe,SACxB3E,KAAKoD,IAAIwB,SAAS,YAAa5E,KAAK6C,MAAQ,EAAG7C,KAAK8C,OAAS,EAAI,IACjE9C,KAAKoD,IAAIwB,SAAT,iBAA4B3E,GAASD,KAAK6C,MAAQ,EAAG7C,KAAK8C,OAAS,K,oCAInE9C,KAAKoD,IAAI0B,UAAU,EAAG,EAAG9E,KAAK6C,MAAO7C,KAAK8C,U,yCAI1C,IAD2B,IAAb1C,EAAa,EAAbA,UACLQ,EAAI,EAAGA,EAAIR,EAAUU,OAAQF,IAGlC,IAFA,IAAMmE,EAAO3E,EAAUQ,GAEdF,EAAI,EAAGA,EAAIqE,EAAKjE,OAAQJ,IAAK,CAClC,IAAMsE,EAAQD,EAAKrE,GAEfsE,GACAhF,KAAKiF,YACDjF,KAAKuD,WAAc7C,EAAIV,KAAK6D,WAC5B7D,KAAKwD,WAAc5C,EAAIZ,KAAK8D,YAC5B9D,KAAK6D,WACL7D,KAAK8D,YACL9D,KAAKgD,OAAOgC,IAM5BhF,KAAKoD,IAAI8B,YAAc,QACvBlF,KAAKoD,IAAI+B,UAAYnF,KAAKsD,qBAC1BtD,KAAKoD,IAAIgC,WAAW,EAAG,EAAGpF,KAAK2D,oBAAqB3D,KAAK4D,wB,qCAGb,IAAlC7C,EAAkC,EAAlCA,MAAOd,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOM,EAAa,EAAbA,UAC/BR,KAAKoD,IAAIsB,UAAY,QACrB1E,KAAKoD,IAAIuB,aAAe,MACxB3E,KAAKoD,IAAIoB,UAAY,QACrBxE,KAAKoD,IAAIqB,KAAO,wBAEhBzE,KAAKoD,IAAIwB,SAAT,iBAA4B3E,GAASD,KAAK+D,OAAQ/D,KAAKgE,OAAS,GAChEhE,KAAKoD,IAAIwB,SAAT,iBAA4B1E,GAASF,KAAK+D,OAAQ/D,KAAKgE,OAAS,IAChEhE,KAAKoD,IAAIwB,SAAT,iBAA4B7D,GAASf,KAAK+D,OAAQ/D,KAAKgE,OAAS,IAChEhE,KAAKoD,IAAIwB,SAAS,OAAQ5E,KAAK+D,OAAQ/D,KAAKgE,OAAS,IAErD,IAAK,IAAIpD,EAAI,EAAGA,EAAIJ,EAAUK,OAAOC,OAAQF,IACzC,IAAK,IAAIF,EAAI,EAAGA,EAAIF,EAAUK,OAAOD,GAAGE,OAAQJ,IAAK,CACjD,IAAMsE,EAAQxE,EAAUK,OAAOD,GAAGF,GAE9BsE,GACAhF,KAAKiF,YACDjF,KAAK+D,OAAUrD,EAAIV,KAAK6D,WAAa,GACrC7D,KAAKgE,OAAS,IAAOpD,EAAIZ,KAAK8D,YAAc,GAC1B,GAAlB9D,KAAK6D,WACc,GAAnB7D,KAAK8D,YACL9D,KAAKgD,OAAOgC,O,kCAOpBtE,EAAGE,EAAGiC,EAAOC,EAAQuC,GAC7BrF,KAAKoD,IAAIoB,UAAYa,EACrBrF,KAAKoD,IAAI8B,YAAc,QACvBlF,KAAKoD,IAAI+B,UAAY,EAErBnF,KAAKoD,IAAIyB,SAASnE,EAAGE,EAAGiC,EAAOC,GAC/B9C,KAAKoD,IAAIgC,WAAW1E,EAAGE,EAAGiC,EAAOC,Q,gCAKzCH,EAAKJ,OAASI,EAAKhD,UAAU4C,OAAS,SAAUC,EAAIC,GAChD,GAAkB,WAAd,EAAOD,IAAmC,WAAhB,EAAOC,GACjC,IAAK,IAAIC,KAAOD,EACRA,EAAK7C,eAAe8C,KACpBF,EAAGE,GAAOD,EAAKC,KCnJ/B,IAAM4C,EAAOpC,SAASqC,cAAc,SAE9BC,EAAO,IAAIzF,EACX0F,EAAO,IAAI9C,EAAK2C,EAAM,IAAK,IAAK,GAAI,IAE1CI,OAAOF,KAAOA,EACdE,OAAOD,KAAOA,EAEdvC,SAASyC,iBAAiB,WAAW,SAAAC,GACjC,OAAOA,EAAMC,SACT,KAAK,GACDL,EAAKM,gBACLL,EAAKM,iBAAiBP,EAAKQ,YAC3B,MACJ,KAAK,GACDR,EAAKS,cACLR,EAAKM,iBAAiBP,EAAKQ,YAC3B,MACJ,KAAK,GACDR,EAAKU,iBACLT,EAAKM,iBAAiBP,EAAKQ,YAC3B,MACJ,KAAK,GACDR,EAAKW,gBACLV,EAAKM,iBAAiBP,EAAKQ,gBAGpC,GAEHI,QAAQC,IAAIb,GACZY,QAAQC,IAAIZ","file":"core-tetris.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* eslint-disable no-mixed-spaces-and-tabs, no-console, no-undef, no-unreachable, no-prototype-builtins */\r\n/* eslint-env node, mocha */\r\n\r\n'use strict'\r\n\r\nexport default class Game {\r\n\r\n    constructor() {\r\n        // Default settings\r\n        this.score = 0\r\n        this.lines = 19\r\n\r\n        this.points = {\r\n            '1': 40,\r\n            '2': 100,\r\n            '3': 300,\r\n            '4': 1200\r\n        }\r\n\r\n        this.playfield = this.createPlayfield()\r\n            \r\n        this.activePiece = this.createPiece()\r\n        this.nextPiece = this.createPiece()\r\n    }\r\n\r\n    get level () {\r\n        return Math.floor(this.lines * 0.1)\r\n    }\r\n\r\n    getState() {\r\n        const playfield = this.createPlayfield()\r\n        const { x: pX, y: pY, blocks } = this.activePiece\r\n\r\n        for (let y = 0; y < this.playfield.length; y++) {\r\n            playfield[y] = []\r\n\r\n            for (let x = 0; x < this.playfield[y].length; x++) {\r\n                playfield[y][x] = this.playfield[y][x]\r\n            }\r\n        }\r\n\r\n        for (let y = 0; y < blocks.length; y++) {\r\n            for (let x = 0; x < blocks[y].length; x++) {\r\n                if (blocks[y][x]) {\r\n                    playfield[pY + y][pX + x] = blocks[y][x]\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            score: this.score,\r\n            level: this.level,\r\n            lines: this.lines,\r\n            nextPiece: this.nextPiece,\r\n            playfield\r\n        }\r\n    }\r\n    \r\n    createPlayfield() {\r\n        const playfield = []\r\n\r\n        for (let y = 0; y < 20; y++) {\r\n            playfield[y] = []\r\n\r\n            for (let x = 0; x < 10; x++) {\r\n                playfield[y][x] = 0\r\n            }\r\n        }\r\n\r\n        return playfield\r\n    }\r\n\r\n    createPiece() {\r\n        const index = Math.floor(Math.random () * 7)\r\n        const type = 'IJLOSTZ'[index]\r\n        const piece = { }\r\n\r\n        switch(type) {\r\n            case 'I': \r\n                piece.blocks = [\r\n                    [0, 0, 0, 0],\r\n                    [1, 1, 1, 1],\r\n                    [0, 0, 0, 0],\r\n                    [0, 0, 0, 0]\r\n                ]\r\n                break\r\n            case 'J': \r\n                piece.blocks = [\r\n                    [0, 0, 0],\r\n                    [2, 2, 2],\r\n                    [0, 0, 2]\r\n                ]\r\n                break\r\n            case 'L': \r\n                piece.blocks = [\r\n                    [0, 0, 0],\r\n                    [3, 3, 3],\r\n                    [4, 0, 0]\r\n                ]\r\n                break\r\n            case 'O': \r\n                piece.blocks = [\r\n                    [0, 0, 0, 0],\r\n                    [0, 4, 4, 0],\r\n                    [0, 4, 4, 0],\r\n                    [0, 0, 0, 0]\r\n                ]\r\n                break\r\n            case 'S': \r\n                piece.blocks = [\r\n                    [0, 0, 0],\r\n                    [0, 5, 5],\r\n                    [5, 5, 0]\r\n                ]\r\n                break\r\n            case 'T':\r\n                piece.blocks = [\r\n                    [0, 0, 0],\r\n                    [6, 6, 6],\r\n                    [0, 6, 0]\r\n                ] \r\n                break\r\n            case 'Z': \r\n                piece.blocks = [\r\n                    [0, 0, 0],\r\n                    [7, 7, 0],\r\n                    [0, 7, 7]\r\n                ]\r\n                break\r\n            default:\r\n                throw new Error('Неизвестная фигура')\r\n        }\r\n\r\n        piece.x = Math.floor((10 - piece.blocks[0].length) / 2)\r\n        piece.y = 0\r\n\r\n        return piece\r\n    }\r\n\r\n    movePieceLeft() {\r\n        this.activePiece.x -= 1\r\n\r\n        if (this.hasCollision()) {\r\n            this.activePiece.x += 1\r\n        }\r\n    }\r\n\r\n    movePieceRight() {\r\n        this.activePiece.x += 1\r\n\r\n        if (this.hasCollision()) {\r\n            this.activePiece.x -= 1\r\n        }\r\n    }\r\n\r\n    movePieceDown() {\r\n        this.activePiece.y += 1\r\n\r\n        if (this.hasCollision()) {\r\n            this.activePiece.y -= 1\r\n            this.lockPiece()\r\n            const clearedLines = this.clearLines()\r\n            this.updateScore(clearedLines)\r\n            this.updatePiece()\r\n        }\r\n    }\r\n\r\n    rotatePiece() {\r\n       this.rotateBlocks()\r\n\r\n        if (this.hasCollision()) {\r\n            this.rotateBlocks(false)\r\n        }\r\n    }\r\n\r\n    rotateBlocks(clockwise = true) {\r\n        const blocks = this.activePiece.blocks\r\n        const length = blocks.length\r\n        const x = Math.floor(length / 2)\r\n        const y = length - 1\r\n\r\n        for (let i = 0; i < x; i++) {\r\n            for (let j = i; j < y - i; j++) {\r\n                const temp = blocks[i][j]\r\n\r\n                if (clockwise) {\r\n                    blocks[i][j] = blocks[y - j][i]\r\n                    blocks[y - j][i] = blocks[y - i][y - j]\r\n                    blocks[y - i][y - j] = blocks[j][y - i]\r\n                    blocks[j][y - i] = temp\r\n                } else {\r\n                    blocks[i][j] = blocks[j][y - i]\r\n                    blocks[j][y - i] = blocks[y - i][y - j]\r\n                    blocks[y - i][y - j] = blocks[y - j][i]\r\n                    blocks[y - j][i] = temp\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    hasCollision() {\r\n        const playfield = this.playfield \r\n        const { x: pX, y: pY, blocks } = this.activePiece\r\n\r\n        for (let y = 0; y < blocks.length; y++) {\r\n            for (let x = 0; x < blocks[y].length; x++) {\r\n                if (\r\n                    blocks[y][x] &&\r\n                    ((playfield[pY + y] === undefined || playfield[pY + y][pX + x] === undefined) || \r\n                    playfield[pY + y][pX + x])\r\n                ) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    lockPiece() {\r\n        const playfield = this.playfield \r\n        const { x: pX, y: pY, blocks } = this.activePiece\r\n\r\n        for (let y = 0; y < blocks.length; y++) {\r\n            for (let x = 0; x < blocks[y].length; x++) {\r\n                if (blocks[y][x]) {\r\n                    playfield[pY + y][pX + x] = blocks[y][x]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clearLines () {\r\n        const rows = 20\r\n        const columns = 10\r\n        let lines = []\r\n\r\n        for (let y = rows - 1; y >= 0; y--) {\r\n            let numberOfBlocks = 0\r\n\r\n            for (let x = 0; x < columns; x++) {\r\n                if (this.playfield[y][x]) {\r\n                    numberOfBlocks += 1 \r\n                }\r\n            }\r\n\r\n            if (numberOfBlocks === 0) {\r\n                break \r\n            } else if (numberOfBlocks < columns) {\r\n                continue\r\n            } else if (numberOfBlocks === columns) {\r\n                lines.unshift(y)\r\n            }\r\n        }\r\n\r\n        for (let index of lines) {\r\n            this.playfield.splice(index, 1)\r\n            this.playfield.unshift(new Array(columns).fill(0))\r\n        }\r\n\r\n        return lines.length\r\n    }\r\n\r\n    updateScore(clearedLines) {\r\n        if (clearedLines > 0) {\r\n            this.score = this.points[clearedLines] * (this.level + 1)\r\n            this.lines += clearedLines            \r\n        }\r\n    }\r\n\r\n    updatePiece() {\r\n        this.activePiece = this.nextPiece \r\n        this.nextPiece = this.createPiece()\r\n    }  \r\n\r\n}\r\n\r\nGame.extend = Game.prototype.extend = function (to, from) {\r\n    if (typeof to === 'object' && typeof from === 'object') {\r\n        for (var pro in from) {\r\n            if (from.hasOwnProperty(pro)) {\r\n                to[pro] = from[pro]\r\n            }\r\n        }\r\n    }\r\n}","/* eslint-disable no-mixed-spaces-and-tabs, no-console, no-undef, no-unreachable, no-prototype-builtins */\r\n/* eslint-env node, mocha */\r\n\r\n'use strict'\r\n\r\nexport default class View {\r\n\r\n    constructor(element, width, height, rows, colums) {\r\n        this.element = element\r\n        this.width = width\r\n        this.height = height\r\n        this.rows = rows\r\n        this.colums = colums\r\n\r\n        this.colors = {\r\n            '1' : 'cyan',\r\n            '2' : 'blue',\r\n            '3' : 'orange',\r\n            '4' : 'yellow',\r\n            '5' : 'green',\r\n            '6' : 'purpure',\r\n            '7' : 'red'\r\n        }\r\n\r\n        this.canvas = document.createElement('canvas')\r\n        this.canvas.width = this.width\r\n        this.canvas.height = this.height\r\n        this.ctx = this.canvas.getContext('2d')\r\n\r\n        this.playfieldBorderWidth = 4\r\n        this.playfieldX = this.playfieldBorderWidth\r\n        this.playfieldY = this.playfieldBorderWidth\r\n        this.playfieldWidth = this.width * 2 / 3\r\n        this.playfieldHeight = this.height\r\n        this.playfieldInnerWidth = this.playfieldWidth - this.playfieldBorderWidth * 2\r\n        this.playfieldInnerHeight = this.playfieldHeight - this.playfieldBorderWidth * 2\r\n\r\n        this.blockWidth = this.playfieldInnerWidth / colums \r\n        this.blockHeight = this.playfieldInnerHeight / rows\r\n\r\n        this.panelX = this.playfieldWidth + 10\r\n        this.panelY = 0\r\n        this.panelWidth = this.width / 2\r\n        this.panelHeight = this.height\r\n\r\n        this.element.appendChild(this.canvas)\r\n    }\r\n\r\n    renderMainScreen(state) {\r\n        this.clearScreen()\r\n        this.renderPlayfield(state)\r\n        this.renderPanel(state)\r\n    }\r\n\r\n    renderStartScreen() {\r\n        this.ctx.fillStyle = 'white'\r\n        this.ctx.font = '18px \"Press Start 2P\"'\r\n        this.ctx.textAlign = 'center'\r\n        this.ctx.textBaseline = 'middle'\r\n        this.ctx.fillText('Press ENTER to Start', this.width / 2, this.height / 2)\r\n    }\r\n\r\n    renderPauseScreen() {\r\n        this.ctx.fillStyle = 'rgba(0, 0, 0, 0, 0.75)'\r\n        this.ctx.fillRect(0, 0, this.width, this.height)\r\n\r\n        this.ctx.fillStyle = 'white'\r\n        this.ctx.font = '18px \"Press Start 2P\"'\r\n        this.ctx.textAlign = 'center'\r\n        this.ctx.textBaseline = 'middle'\r\n        this.ctx.fillText('Press ENTER to Resume', this.width / 2, this.height / 2)\r\n    }\r\n\r\n    renderEndScreen({ score }) {\r\n        this.clearScreen()\r\n\r\n        this.ctx.fillStyle = 'white'\r\n        this.ctx.font = '18px \"Press Start 2P\"'\r\n        this.ctx.textAlign = 'center'\r\n        this.ctx.textBaseline = 'middle'\r\n        this.ctx.fillText('Game Over', this.width / 2, this.height / 2 - 48)\r\n        this.ctx.fillText(`Score: ${score}`, this.width / 2, this.height / 2)\r\n    }\r\n\r\n    clearScreen() {\r\n        this.ctx.clearRect(0, 0, this.width, this.height)\r\n    }\r\n\r\n    renderPlayfield({ playfield }) {\r\n        for (let y = 0; y < playfield.length; y++) {\r\n            const line = playfield[y]\r\n\r\n            for (let x = 0; x < line.length; x++) {\r\n                const block = line[x]\r\n\r\n                if (block) {\r\n                    this.renderBlock(\r\n                        this.playfieldX + (x * this.blockWidth), \r\n                        this.playfieldY + (y * this.blockHeight),  \r\n                        this.blockWidth, \r\n                        this.blockHeight, \r\n                        this.colors[block]\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ctx.strokeStyle = 'white'\r\n        this.ctx.lineWidth = this.playfieldBorderWidth \r\n        this.ctx.strokeRect(0, 0, this.playfieldInnerWidth, this.playfieldInnerHeight)\r\n    }\r\n\r\n    renderPanel({ level, score, lines, nextPiece }) {\r\n        this.ctx.textAlign = 'start'\r\n        this.ctx.textBaseline = 'top'\r\n        this.ctx.fillStyle = 'white'\r\n        this.ctx.font = '14px \"Press Start 2P\"'\r\n\r\n        this.ctx.fillText(`Score: ${score}`, this.panelX, this.panelY + 0)\r\n        this.ctx.fillText(`Lines: ${lines}`, this.panelX, this.panelY + 24)\r\n        this.ctx.fillText(`Level: ${level}`, this.panelX, this.panelY + 48)\r\n        this.ctx.fillText('Next', this.panelX, this.panelY + 96)\r\n\r\n        for (let y = 0; y < nextPiece.blocks.length; y++) {\r\n            for (let x = 0; x < nextPiece.blocks[y].length; x++) {\r\n                const block = nextPiece.blocks[y][x]\r\n\r\n                if (block) {\r\n                    this.renderBlock(\r\n                        this.panelX + (x * this.blockWidth * 0.5), \r\n                        this.panelY + 100 + (y * this.blockHeight * 0.5), \r\n                        this.blockWidth * 0.5, \r\n                        this.blockHeight * 0.5, \r\n                        this.colors[block]\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    renderBlock(x, y, width, height, color) {\r\n        this.ctx.fillStyle = color\r\n        this.ctx.strokeStyle = 'black'\r\n        this.ctx.lineWidth = 2\r\n\r\n        this.ctx.fillRect(x, y, width, height)\r\n        this.ctx.strokeRect(x, y, width, height)\r\n    }\r\n\r\n}\r\n\r\nView.extend = View.prototype.extend = function (to, from) {\r\n    if (typeof to === 'object' && typeof from === 'object') {\r\n        for (var pro in from) {\r\n            if (from.hasOwnProperty(pro)) {\r\n                to[pro] = from[pro]\r\n            }\r\n        }\r\n    }\r\n}","/* eslint-disable no-mixed-spaces-and-tabs, no-console, no-undef, no-unreachable */\r\n/* eslint-env node, mocha */\r\n\r\n'use strict'\r\n\r\nimport Game from './game.js'\r\nimport View from './view.js'\r\n\r\nconst root = document.querySelector('#root')\r\n\r\nconst game = new Game()\r\nconst view = new View(root, 480, 470, 20, 10)\r\n\r\nwindow.game = game\r\nwindow.view = view\r\n\r\ndocument.addEventListener('keydown', event => {\r\n    switch(event.keyCode) {\r\n        case 37: \r\n            game.movePieceLeft()\r\n            view.renderMainScreen(game.getState())\r\n            break\r\n        case 38:\r\n            game.rotatePiece()\r\n            view.renderMainScreen(game.getState())\r\n            break\r\n        case 39:  \r\n            game.movePieceRight()\r\n            view.renderMainScreen(game.getState())\r\n            break \r\n        case 40:  \r\n            game.movePieceDown()\r\n            view.renderMainScreen(game.getState())\r\n            break     \r\n    }\r\n}, false)\r\n\r\nconsole.log(game)\r\nconsole.log(view)"],"sourceRoot":""}